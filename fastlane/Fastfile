# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.57.0"

default_platform :ios

platform :ios do

  APP_NAME = "KPCC"

  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    path = File.expand_path "../Pods", File.dirname(__FILE__)
    cocoapods if Dir["#{path}/*"].empty?
  end

  private_lane :delete_ipa do
    path = lane_context[SharedValues::IPA_OUTPUT_PATH]
    if File.extname(path) == ".ipa"
      File.delete path if File.exist? path
      path.sub! /\.ipa$/, ".app.dSYM.zip"
      File.delete path if File.exist? path
    end
  end

  desc "Reset Simulator"
  lane :simreset do
    sh "osascript -e 'tell application \"Simulator\" to quit'"
    sh "xcrun simctl erase all"
  end

  desc "Runs all the tests"
  lane :test do |options|
    scan(
      scheme: APP_NAME,
      device: options[:device]
    )
    simreset if options[:simreset]
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    ensure_git_branch(branch: "develop")
    gym(scheme: "#{APP_NAME}-Release")
    pilot
    delete_ipa
    attributes = [
      APP_NAME,
      get_version_number,
      "(#{latest_testflight_build_number})"
    ]
    slack(
      message: "TestFlight: There is an update available for #{attributes * ' '}",
      default_payloads: []
    )
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    ensure_git_branch(branch: "develop")
    gym(scheme: "#{APP_NAME}-Release")
    deliver(force: true)
    delete_ipa
  end

  after_all do |lane|
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end

end
